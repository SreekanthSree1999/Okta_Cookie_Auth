name: Build, Push, and Deploy to Kubernetes

on:
  push:
    branches:
      - master  # Runs when code is pushed to master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Debug Secrets (Check if DOCKER_USERNAME is set)
      run: |
        if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
          echo "❌ ERROR: DOCKER_USERNAME is empty. Please check your GitHub Secrets."
          exit 1
        fi
        echo "✅ DOCKER_USERNAME is set."

    # Step 1: Login to Docker Hub 
    - name: Login to Docker Hub 
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 2: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=${GITHUB_SHA::7}  # Short commit SHA as a unique tag
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/okta_cookie_auth:$IMAGE_TAG
        LATEST_IMAGE=${{ secrets.DOCKER_USERNAME }}/okta_cookie_auth:latest

        # Save IMAGE_NAME and user info to environment file for later steps
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "LATEST_IMAGE=$LATEST_IMAGE" >> $GITHUB_ENV
        echo "COMMIT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
        echo "GITHUB_USER=${{ github.actor }}" >> $GITHUB_ENV
        echo "DEPLOYMENT_NUM=${{ github.run_number }}" >> $GITHUB_ENV

        # Build and Push Docker Image
        docker build --no-cache -t $IMAGE_NAME -t $LATEST_IMAGE .
        docker push $IMAGE_NAME
        docker push $LATEST_IMAGE

    # Step 3: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

        # Update Kubernetes Deployment with new image tag
        kubectl set image deployment/myapp-deployment myapp-container=$LATEST_IMAGE --namespace=default

        # Force restart to ensure new pods are created with the latest image
        kubectl rollout restart deployment/myapp-deployment --namespace=default

        # Verify Deployment Rollout
        kubectl rollout status deployment/myapp-deployment --namespace=default --timeout=30m

    # Step 4: Update Deployment History in .github/workflows/deployment-info.txt
    - name: Update Deployment History
      run: |
        DEPLOYMENT_FILE=".github/workflows/deployment-info.txt"
        NEW_ENTRY="Build, Push, and Deploy to Kubernetes #${DEPLOYMENT_NUM}: Commit ${COMMIT_SHA} pushed by ${GITHUB_USER}"

        # Add the new entry at the top of the file
        { echo "$NEW_ENTRY"; echo ""; cat "$DEPLOYMENT_FILE"; } > temp.txt || echo "$NEW_ENTRY" > temp.txt
        mv temp.txt "$DEPLOYMENT_FILE"

        cat "$DEPLOYMENT_FILE"  # Debugging: Print file contents

    # Step 5: Commit and Push Deployment History
    - name: Commit and Push Deployment History
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add History/deployment-info.txt
        git commit -m "Update deployment history with new deployment #${DEPLOYMENT_NUM}"
        git push
